<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <SolidColorBrush x:Key="ButtonHover" Color="#C2E0FF" />
    <SolidColorBrush x:Key="ButtonHoverBorder" Color="#3399FF" />
    <SolidColorBrush x:Key="ButtonChecked" Color="#E6F0FA" />
    <SolidColorBrush x:Key="ButtonPressed" Color="#99CCFF" />
    <SolidColorBrush x:Key="ButtonPressedBorder" Color="#3399FF" />

    <!-- =============================================================================== -->
    <!-- ColorPicker                                                                     -->
    <!-- =============================================================================== -->

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <xctk:InverseBoolConverter x:Key="InverseBoolConverter" />
    <xctk:ColorToSolidColorBrushConverter x:Key="ColorToSolidColorBrushConverter" />
    <xctk:AdditionConverter x:Key="AdditionConverter" />
    <xctk:ColorModeToTabItemSelectedConverter x:Key="ColorModeToTabItemSelectedConverter" />

    <Geometry x:Key="DownArrowGeometry">M0,0 L3,0 4.5,1.5 6,0 9,0 4.5,4.5 z</Geometry>

    <DrawingBrush  x:Key="CheckerBrush" Viewport="0,0,10,10" ViewportUnits="Absolute" TileMode="Tile">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="White">
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry Rect="0,0 100,100" />
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing Brush="LightGray">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0,0 50,50" />
                            <RectangleGeometry Rect="50,50 50,50" />
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <LinearGradientBrush x:Key="ColorPickerDarkBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFA3AEB9" Offset="0" />
        <GradientStop Color="#FF8399A9" Offset="0.375" />
        <GradientStop Color="#FF718597" Offset="0.375" />
        <GradientStop Color="#FF617584" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PopupBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFffffff" />
                <GradientStop Offset="1" Color="#FFE8EBED" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="ColorItemContainerStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="ToolTip" Value="{Binding Name}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid x:Name="mainGrid"
                     ToolTip="{Binding Name}">
                        <Grid.Resources>
                            <Style TargetType="ToolTip">
                                <Style.Triggers>
                                    <Trigger Property="Content"
                                    Value="{x:Static sys:String.Empty}">
                                        <Setter Property="Visibility"
                                      Value="Collapsed" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Resources>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <Border BorderThickness="1" Background="Transparent" BorderBrush="Transparent" x:Name="_outerBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Border Background="Transparent" BorderThickness="1" BorderBrush="Transparent" x:Name="_innerBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="_outerBorder" Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
<!--                            <Setter TargetName="_outerBorder" Property="BorderBrush" Value="#FFFF0000" />
                            <Setter TargetName="_innerBorder" Property="BorderBrush" Value="#FFFFFF00" />-->
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="_innerBorder" Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
<!--                            <Setter TargetName="_outerBorder" Property="BorderBrush" Value="#FFFF0000" />
                            <Setter TargetName="_innerBorder" Property="BorderBrush" Value="#FFFFFF00" />-->
                        </Trigger>
                        <DataTrigger Binding="{Binding DisplayColorAndName, RelativeSource={RelativeSource AncestorType={x:Type xctk:ColorPicker}}}"
                               Value="False">
                            <Setter Property="ToolTip"
                             Value="{x:Static sys:String.Empty}"
                             TargetName="mainGrid" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MinimalisticComboBoxToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="Rectangle" Grid.ColumnSpan="2" 
                                   HorizontalAlignment="Stretch" 
                                   VerticalAlignment="Stretch" 
                                   Width="Auto" 
                                   Height="Auto" 
                                   Fill="Transparent" 
                                   Stroke="LightGray"/>
                        <Border Grid.Column="0"  
                                Background="White" 
                                BorderBrush="LightGray" 
                                Margin="1 1 2 1" 
                                SnapsToDevicePixels="True">
                            <ContentPresenter Content="{TemplateBinding Content}" 
                                              ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Border>
<!--                        <Rectangle Grid.Column="0" 
                                   HorizontalAlignment="Stretch"  
                                   VerticalAlignment="Stretch" 
                                   Width="Auto" 
                                   Height="Auto" 
                                   Fill="Green" 
                                   Margin="3"/>-->
                        <Border x:Name="BorderArrow" 
                                Margin="1" 
                                Grid.Column="1" 
                                Width="{Binding ActualHeight, ElementName=BorderArrow}" 
                                Height="Auto" 
                                Background="{DynamicResource HightLightGrayBrush}">
                            <Path x:Name="Arrow"  
                                  HorizontalAlignment="Center" 
                                  Height="Auto" 
                                  Width="Auto" 
                                  VerticalAlignment="Center" 
                                  Fill="{DynamicResource AccentColorBrush}" 
                                  Data="M 0 0 L 4 4 L 8 0 Z" 
                                  RenderTransformOrigin="0.5,0.5">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" Value="{DynamicResource AccentColorBrush}" TargetName="Rectangle"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Stroke" Value="{DynamicResource AccentColorBrush}" TargetName="Rectangle"/>
                            <!--<Setter Property="Fill" Value="{DynamicResource PressedBrush}" TargetName="Rectangle"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter Property="Fill" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Rectangle"/>
                <Setter Property="Stroke" Value="{DynamicResource DisabledBorderBrush}" TargetName="Rectangle"/>-->
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                            <Setter Property="Fill" Value="{DynamicResource DisabledForegroundBrush}" TargetName="Arrow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="ColorItemTemplate">
        <Grid>
            <Border Background="{StaticResource CheckerBrush}" BorderBrush="DarkGray" BorderThickness="1" Margin="2,2,2,2" >
                <Rectangle Width="14" Height="14">
                    <Rectangle.Style>
                        <Style TargetType="Rectangle">
                            <Setter Property="Fill" Value="{Binding Color, Converter={StaticResource ColorToSolidColorBrushConverter}}" />
                        </Style>
                    </Rectangle.Style>
                </Rectangle>
            </Border>
        </Grid>
    </DataTemplate>

    <Style x:Key="ColorPickerToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid SnapsToDevicePixels="True">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                <ContentPresenter Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                            </Border>

                            <xctk:ButtonChrome x:Name="ToggleButtonChrome"
                                          Grid.Column="1"
                                          Visibility="{Binding ShowDropDownButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xctk:ColorPicker}, Converter={StaticResource BooleanToVisibilityConverter}}"
                                          RenderChecked="{Binding IsOpen, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xctk:ColorPicker}}"
                                          RenderEnabled="{Binding IsEnabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xctk:ColorPicker}}"
											         RenderMouseOver="{TemplateBinding IsMouseOver}"
											         RenderPressed="{TemplateBinding IsPressed}">

                                <Grid x:Name="arrowGlyph" IsHitTestVisible="False" Grid.Column="1" Margin="5">
                                    <Path x:Name="Arrow"
                                 Width="9"
                                 Height="5"
                                 Data="{StaticResource DownArrowGeometry}" 
                                 Fill="#FF000000"
                                 Margin="0,1,0,0"/>
                                </Grid>
                            </xctk:ButtonChrome>
                        </Grid>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColorDisplayStyle" TargetType="ContentControl">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border Background="{StaticResource CheckerBrush}">
                        <Rectangle Fill="{Binding SelectedColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xctk:ColorPicker}, Converter={StaticResource ColorToSolidColorBrushConverter}}" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding SelectedColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xctk:ColorPicker}}"
                      Value="{x:Null}">
                <Setter Property="Visibility"
                    Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RoundedColorDisplayStyle" TargetType="ContentControl">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Ellipse Stroke="Aqua" StrokeThickness="1" Height="7" Width="7" Fill="{Binding SelectedColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xctk:ColorPicker}, Converter={StaticResource ColorToSolidColorBrushConverter}}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding SelectedColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xctk:ColorPicker}}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ColorListStyle" TargetType="ListBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MaxHeight" Value="500" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <!-- ConverterParameter is margin/Padding from Popup-->
                    <WrapPanel Width="{Binding MaxDropDownWidth, RelativeSource={RelativeSource AncestorType={x:Type xctk:ColorPicker}}, Converter={StaticResource AdditionConverter}, ConverterParameter=-18}" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ColorItemContainerStyle}" />
        <Setter Property="ItemTemplate" Value="{StaticResource ColorItemTemplate}" />
        <Setter Property="SelectionMode" Value="Single" />
    </Style>

    <ControlTemplate x:Key="TabItemTemplate" TargetType="{x:Type xctk:ColorPickerTabItem}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true" >
            <ContentPresenter x:Name="contentPresenter"
                           ContentSource="Header"
                           Focusable="False"
                           HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                           Margin="{TemplateBinding Padding}"
                           RecognizesAccessKey="True"
                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                           VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />

        </Grid>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Panel.ZIndex" Value="1" />
                <Setter Property="Margin" Value="-2,-2,-2,0" />
<!--                <Setter Property="Opacity" TargetName="innerBorder" Value="1" />-->
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="MyColorPickerStyle" TargetType="{x:Type xctk:ColorPicker}">
        <Setter Property="BorderBrush" Value="{StaticResource ColorPickerDarkBorderBrush}" />
        <Setter Property="ButtonStyle" Value="{StaticResource MinimalisticComboBoxToggleButtonStyle}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MaxDropDownWidth" Value="260" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xctk:ColorPicker}">
                    <Grid>
                        <ToggleButton x:Name="PART_ColorPickerToggleButton"
                                      IsTabStop="True"
                                      MinHeight="22" 
                                      Width="70"
                                      Background="{TemplateBinding Background}" 
                                      BorderBrush="{TemplateBinding BorderBrush}" 
                                      BorderThickness="{TemplateBinding BorderThickness}" 
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Padding="{TemplateBinding Padding}"
                                      IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                      IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}"
                                      Style="{TemplateBinding ButtonStyle}">
                            <Grid Margin="2">
                                <ContentControl x:Name="ColorOnly" Style="{StaticResource ColorDisplayStyle}" />

                                <Border x:Name="ColorAndName" Visibility="Hidden">
                                    <StackPanel Orientation="Horizontal">
                                        <ContentControl HorizontalAlignment="Left" Width="20" Margin="2,1,4,1" Style="{StaticResource ColorDisplayStyle}" BorderThickness="0" BorderBrush="#FFC9CACA" />
                                        <TextBlock Text="{Binding SelectedColorText, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" />
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </ToggleButton>
                        <Popup x:Name="PART_ColorPickerPalettePopup" 
                               VerticalAlignment="Bottom" 
                               HorizontalAlignment="Left"
                               IsOpen="{Binding ElementName=PART_ColorPickerToggleButton, Path=IsChecked}" 
                               StaysOpen="False" 
                               AllowsTransparency="True" 
                               Focusable="False" 
                               HorizontalOffset="-161"
                               VerticalOffset="5" 
                               PopupAnimation="Slide"
                               Placement="Bottom"
                               PlacementTarget="{Binding ElementName=PART_ColorPickerToggleButton}"
                               ToolTip="{x:Static sys:String.Empty}">
                            <Popup.Resources>
                                <Style TargetType="ToolTip">
                                    <Style.Triggers>
                                        <Trigger Property="Content" Value="{x:Static sys:String.Empty}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Popup.Resources>
                            <Border x:Name="MainBorder" BorderThickness="1" Background="White" BorderBrush="LightGray" Padding="0">
                                <TabControl x:Name="ColorPickerTabControl" BorderThickness="0"
                                    Background="Transparent"
                                    SelectedIndex="{Binding ColorMode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorModeToTabItemSelectedConverter}}">
                                    <xctk:ColorPickerTabItem x:Name="StandardTabItem"
                                                     Header="{Binding StandardButtonHeader, RelativeSource={RelativeSource TemplatedParent}}"
                                                     Template="{StaticResource TabItemTemplate}">
                                        <Grid x:Name="_colorPaletteHost" Margin="1 0 1 1" >
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>

                                            <!-- Available Colors -->
                                            <Grid Grid.Row="1" Visibility="{TemplateBinding ShowAvailableColors, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <!--<RowDefinition Height="Auto" />-->
                                                        <RowDefinition />
                                                    </Grid.RowDefinitions>
                                                    <!--<TextBlock Text="{TemplateBinding AvailableColorsHeader}" Background="AliceBlue" Padding="2" Margin="0,0,0,1" />-->
                                                    <ListBox x:Name="PART_AvailableColors"
                                                             ItemsSource="{Binding AvailableColors, RelativeSource={RelativeSource TemplatedParent}}"
                                                             Style="{StaticResource ColorListStyle}" />
                                                </Grid>
                                            </Grid>

                                            <!-- Standard Colors-->
                                            <Grid Grid.Row="2" Visibility="{TemplateBinding ShowStandardColors, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition Height="Auto" />
                                                    </Grid.RowDefinitions>
                                                    <TextBlock Text="{TemplateBinding StandardColorsHeader}" Background="AliceBlue" Padding="2" Margin="0,1,0,1" />
                                                    <ListBox x:Name="PART_StandardColors"
                                             Grid.Row="1"
                                             ItemsSource="{Binding StandardColors, RelativeSource={RelativeSource TemplatedParent}}"                                                      
                                             Style="{StaticResource ColorListStyle}" />
                                                </Grid>
                                            </Grid>

                                            <!-- Recent Colors-->
<!--                                            <Grid Grid.Row="3" Margin="0,1,0,1" Visibility="{TemplateBinding ShowRecentColors, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition Height="22" />
                                                    </Grid.RowDefinitions>
                                                    <TextBlock Text="{TemplateBinding RecentColorsHeader}" Background="AliceBlue" Padding="2" Margin="0,1,0,1" />
                                                    <ListBox x:Name="PART_RecentColors"
                                             Grid.Row="1"
                                             ItemsSource="{Binding RecentColors, RelativeSource={RelativeSource TemplatedParent}}"
                                             Style="{StaticResource ColorListStyle}" />
                                                </Grid>
                                            </Grid>-->
                                        </Grid>
                                    </xctk:ColorPickerTabItem>
                                    <xctk:ColorPickerTabItem x:Name="AdvancedTabItem"
                                                     Header="{Binding AdvancedButtonHeader, RelativeSource={RelativeSource TemplatedParent}}"
                                                     Template="{StaticResource TabItemTemplate}">
                                        <!-- ColorCanvas -->
                                        <Grid x:Name="_colorCanvasHost">
                                            <xctk:ColorCanvas Background="Transparent"
                                                    BorderThickness="0"
                                                    UsingAlphaChannel="{Binding UsingAlphaChannel, RelativeSource={RelativeSource TemplatedParent}}"
                                                    SelectedColor="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Width="{Binding MaxDropDownWidth, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource AdditionConverter}, ConverterParameter=-18}" />
                                        </Grid>
                                    </xctk:ColorPickerTabItem>
                                </TabControl>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="DisplayColorAndName" Value="True">
                            <Setter TargetName="ColorOnly" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ColorAndName" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="ShowTabHeaders" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="StandardTabItem" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="AdvancedTabItem" />
                        </Trigger>
                        <Trigger Property="ShowDropDownButton" Value="False">
                            <Setter Property="BorderThickness" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ColorAndName" Property="Background" Value="LightGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundedColorPickerStyle" TargetType="{x:Type xctk:ColorPicker}">
        <Setter Property="BorderBrush" Value="{StaticResource ColorPickerDarkBorderBrush}" />
        <Setter Property="ButtonStyle" Value="{StaticResource MinimalisticComboBoxToggleButtonStyle}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MaxDropDownWidth" Value="260" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xctk:ColorPicker}">
                    <Grid>
                        <ToggleButton x:Name="PART_ColorPickerToggleButton"
                                      IsTabStop="True"
                                      BorderThickness="0" 
                                      Background="Transparent"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Padding="{TemplateBinding Padding}"
                                      IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                      IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Grid Height="18" Width="18">
                                                    <Ellipse x:Name="BorderEllipse" Height="18" Width="18"
                                                             Stroke="DimGray"
                                                             StrokeThickness="1"
                                                             Fill="Transparent"/>
                                                    <Ellipse x:Name="Ellipse" Height="12" Width="12"
                                                             HorizontalAlignment="Left"
                                                             VerticalAlignment="Top"
                                                             Panel.ZIndex="1"
                                                             Margin="3 3 3 3"
                                                             Fill="{Binding SelectedColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xctk:ColorPicker}, Converter={StaticResource ColorToSolidColorBrushConverter}}" 
                                                    />
                                                </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="BorderEllipse" Property="StrokeThickness" Value="1"/>
                                                        <Setter TargetName="BorderEllipse" Property="Stroke" Value="{DynamicResource AccentColorBrush}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <Popup x:Name="PART_ColorPickerPalettePopup" 
                               VerticalAlignment="Bottom" 
                               HorizontalAlignment="Left"
                               IsOpen="{Binding ElementName=PART_ColorPickerToggleButton, Path=IsChecked}" 
                               StaysOpen="False" 
                               AllowsTransparency="True" 
                               Focusable="False" 
                               HorizontalOffset="-161"
                               VerticalOffset="5" 
                               PopupAnimation="Slide"
                               Placement="Bottom"
                               PlacementTarget="{Binding ElementName=PART_ColorPickerToggleButton}"
                               ToolTip="{x:Static sys:String.Empty}">
                            <Popup.Resources>
                                <Style TargetType="ToolTip">
                                    <Style.Triggers>
                                        <Trigger Property="Content" Value="{x:Static sys:String.Empty}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Popup.Resources>
                            <Border x:Name="MainBorder" BorderThickness="1" Background="White" BorderBrush="LightGray" Padding="0">
                                <TabControl x:Name="ColorPickerTabControl" BorderThickness="0"
                                    Background="Transparent"
                                    SelectedIndex="{Binding ColorMode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorModeToTabItemSelectedConverter}}">
                                    <xctk:ColorPickerTabItem x:Name="StandardTabItem"
                                                     Header="{Binding StandardButtonHeader, RelativeSource={RelativeSource TemplatedParent}}"
                                                     Template="{StaticResource TabItemTemplate}">
                                        <Grid x:Name="_colorPaletteHost" Margin="1 0 1 1" >
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>

                                            <!-- Available Colors -->
                                            <Grid Grid.Row="1" Visibility="{TemplateBinding ShowAvailableColors, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <!--<RowDefinition Height="Auto" />-->
                                                        <RowDefinition />
                                                    </Grid.RowDefinitions>
                                                    <!--<TextBlock Text="{TemplateBinding AvailableColorsHeader}" Background="AliceBlue" Padding="2" Margin="0,0,0,1" />-->
                                                    <ListBox x:Name="PART_AvailableColors"
                                                             ItemsSource="{Binding AvailableColors, RelativeSource={RelativeSource TemplatedParent}}"
                                                             Style="{StaticResource ColorListStyle}" />
                                                </Grid>
                                            </Grid>

                                            <!-- Standard Colors-->
                                            <Grid Grid.Row="2" Visibility="{TemplateBinding ShowStandardColors, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition Height="Auto" />
                                                    </Grid.RowDefinitions>
                                                    <TextBlock Text="{TemplateBinding StandardColorsHeader}" Background="AliceBlue" Padding="2" Margin="0,1,0,1" />
                                                    <ListBox x:Name="PART_StandardColors"
                                             Grid.Row="1"
                                             ItemsSource="{Binding StandardColors, RelativeSource={RelativeSource TemplatedParent}}"                                                      
                                             Style="{StaticResource ColorListStyle}" />
                                                </Grid>
                                            </Grid>

                                            <!-- Recent Colors-->
                                            <!--                                            <Grid Grid.Row="3" Margin="0,1,0,1" Visibility="{TemplateBinding ShowRecentColors, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition Height="22" />
                                                    </Grid.RowDefinitions>
                                                    <TextBlock Text="{TemplateBinding RecentColorsHeader}" Background="AliceBlue" Padding="2" Margin="0,1,0,1" />
                                                    <ListBox x:Name="PART_RecentColors"
                                             Grid.Row="1"
                                             ItemsSource="{Binding RecentColors, RelativeSource={RelativeSource TemplatedParent}}"
                                             Style="{StaticResource ColorListStyle}" />
                                                </Grid>
                                            </Grid>-->
                                        </Grid>
                                    </xctk:ColorPickerTabItem>
                                    <xctk:ColorPickerTabItem x:Name="AdvancedTabItem"
                                                     Header="{Binding AdvancedButtonHeader, RelativeSource={RelativeSource TemplatedParent}}"
                                                     Template="{StaticResource TabItemTemplate}">
                                        <!-- ColorCanvas -->
                                        <Grid x:Name="_colorCanvasHost">
                                            <xctk:ColorCanvas Background="Transparent"
                                                    BorderThickness="0"
                                                    UsingAlphaChannel="{Binding UsingAlphaChannel, RelativeSource={RelativeSource TemplatedParent}}"
                                                    SelectedColor="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Width="{Binding MaxDropDownWidth, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource AdditionConverter}, ConverterParameter=-18}" />
                                        </Grid>
                                    </xctk:ColorPickerTabItem>
                                </TabControl>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShowTabHeaders" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="StandardTabItem" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="AdvancedTabItem" />
                        </Trigger>
                        <Trigger Property="ShowDropDownButton" Value="False">
                            <Setter Property="BorderThickness" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>