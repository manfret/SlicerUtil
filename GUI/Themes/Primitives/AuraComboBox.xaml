<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">

    <!-- Simple ComboBox Toggle Button - This is used in ComboBox to expand and collapse the ComboBox Popup-->
    <ControlTemplate x:Key="MinimalisticComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Rectangle Grid.ColumnSpan="2"
                       HorizontalAlignment="Stretch"
                       x:Name="Rectangle"
                       VerticalAlignment="Stretch"
                       Width="Auto"
                       Height="Auto"
                       Fill="Transparent"
                       Stroke="LightGray" />
            <Rectangle Grid.Column="0"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch"
                       Width="Auto"
                       Height="Auto"
                       Fill="Transparent"
                       Margin="1" />
            <Border x:Name="BorderArrow"
                    Margin="1"
                    Grid.Column="1"
                    Width="{Binding ActualHeight, ElementName=BorderArrow}"
                    Height="Auto"
                    Background="{DynamicResource HightLightGrayBrush}">
                <Path HorizontalAlignment="Center"
                      x:Name="Arrow"
                      Height="Auto"
                      Width="Auto"
                      VerticalAlignment="Center"
                      Fill="{DynamicResource AccentColorBrush}"
                      Data="M 0 0 L 4 4 L 8 0 Z"
                      RenderTransformOrigin="0.5,0.5">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                            <SkewTransform />
                            <RotateTransform />
                            <TranslateTransform />
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Stroke" Value="{DynamicResource AccentColorBrush}" TargetName="Rectangle" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Stroke" Value="{DynamicResource AccentColorBrush}" TargetName="Rectangle" />
                <!--<Setter Property="Fill" Value="{DynamicResource PressedBrush}" TargetName="Rectangle"/>-->
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <!--<Setter Property="Fill" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Rectangle"/>
                <Setter Property="Stroke" Value="{DynamicResource DisabledBorderBrush}" TargetName="Rectangle"/>-->
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                <Setter Property="Fill" Value="{DynamicResource DisabledForegroundBrush}" TargetName="Arrow" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- This is the area which contains the selected item in the ComboBox -->
    <ControlTemplate x:Key="MinimalisticComboBoxTextBox" TargetType="{x:Type TextBox}">
        <!-- This must be named as PART_ContentHost -->
        <Border x:Name="PART_ContentHost"
                Focusable="False"
                Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <!-- Simple ComboBoxItem - This is used for each item inside of the ComboBox. You can change the selected color of each item below-->
    <Style x:Key="MinimalisticComboBoxItem" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Grid SnapsToDevicePixels="true">
                        <Border x:Name="Border"
                                Padding="3"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Change IsHighlighted SelectedBackgroundBrush to set the selection color for the items -->
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" Value="{DynamicResource HightLightGrayBrush}"
                                    TargetName="Border" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Simple ComboBox 
    This uses the ComboBoxToggleButton to expand and collapse a Popup control
    SimpleScrollViewer to allow items to be scrolled and SimpleComboBoxItem to define the look of each item 
    The Popup shows a list of items in a StackPanel-->

    <Style x:Key="MinimalisticComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource MinimalisticComboBoxItem}" />
        <Setter Property="Margin" Value="0 5 0 5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton Template="{DynamicResource MinimalisticComboBoxToggleButton}"
                                      x:Name="ToggleButton"
                                      Focusable="false"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press"
                                      Panel.ZIndex="1" />
                        <Border Background="{TemplateBinding Background}"
                                x:Name="ContentPresenterBorder"
                                Padding="3"
                                BorderBrush="{DynamicResource BorderBrush}"
                                BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Left"
                                              x:Name="ContentSite"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              IsHitTestVisible="False" />
                        </Border>


                        <!-- The TextBox must be named PART_EditableTextBox or ComboBox will not recognize it -->
                        <TextBox Visibility="Hidden"
                                 Template="{DynamicResource MinimalisticComboBoxTextBox}"
                                 Margin="3"
                                 HorizontalAlignment="Left"
                                 x:Name="PART_EditableTextBox"
                                 Style="{x:Null}"
                                 VerticalAlignment="Center"
                                 Focusable="True"
                                 Background="Transparent"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                 Panel.ZIndex="1" />

                        <!-- The Popup shows the list of items in the ComboBox. IsOpen is databound to IsDropDownOpen which is toggled via the ComboBoxToggleButton -->
                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}"
                               Placement="Bottom"
                               x:Name="Popup"
                               Focusable="False"
                               AllowsTransparency="True"
                               PopupAnimation="Slide">
                            <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  x:Name="DropDown"
                                  SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{DynamicResource BorderBrush}"
                                        BorderThickness="1" />
                                <ScrollViewer Margin="4 6 4 4"
                                              Style="{DynamicResource SimpleScrollViewer}"
                                              SnapsToDevicePixels="True"
                                              HorizontalScrollBarVisibility="Auto"
                                              VerticalScrollBarVisibility="Auto"
                                              CanContentScroll="True">

                                    <!--The StackPanel is used to display the children by setting IsItemsHost to be True-->
                                    <StackPanel IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Contained" />

                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentPresenterBorder" Property="BorderBrush"
                                    Value="{DynamicResource AccentColorBrush}" />
                            <Setter TargetName="ContentPresenterBorder" Property="BorderThickness" Value=" 1 1 0 1" />
                        </Trigger>

                        <!-- This forces the DropDown to have a minimum size if it is empty -->
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="MinHeight" Value="95" TargetName="DropDownBorder" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="AllowsTransparency" SourceName="Popup" Value="true">
                            <Setter Property="Margin" Value="0,2,0,0" TargetName="DropDownBorder" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox" />
                            <Setter Property="Visibility" Value="Hidden" TargetName="ContentSite" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="GigaComboBoxItem" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Grid SnapsToDevicePixels="true">
                        <Border x:Name="Border"
                                Padding="3"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Change IsHighlighted SelectedBackgroundBrush to set the selection color for the items -->
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" Value="{DynamicResource HightLightGrayBrush}"
                                    TargetName="Border" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GigaComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource GigaComboBoxItem}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid HorizontalAlignment="Stretch">
                        <ToggleButton x:Name="ToggleButton"
                                      Focusable="false"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press"
                                      Panel.ZIndex="1">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <ContentPresenter />
                                </ControlTemplate>
                            </ToggleButton.Template>
                            <ToggleButton.Content>
                                <Border Background="{TemplateBinding Background}"
                                        x:Name="ContentPresenterBorder"
                                        BorderBrush="{DynamicResource BorderBrush}"
                                        BorderThickness="1"
                                        Padding="10 5 0 5">
                                    <DockPanel LastChildFill="True">
                                        <Border x:Name="OpenArrow"
                                                HorizontalAlignment="Right"
                                                Width="9" Height="13"
                                                Background="{DynamicResource SimpleArrow}"
                                                Margin="5 0 15 0"
                                                RenderTransformOrigin="0.5,0.5"
                                                DockPanel.Dock="Right">
                                            <Border.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform />
                                                    <SkewTransform />
                                                    <RotateTransform Angle="-90" />
                                                    <TranslateTransform />
                                                </TransformGroup>
                                            </Border.RenderTransform>
                                        </Border>
                                        <ContentPresenter HorizontalAlignment="Stretch"
                                                          x:Name="ContentSite"
                                                          TextBlock.Foreground="#383838"
                                                          TextBlock.FontSize="14"
                                                          TextBlock.FontFamily="Segoe UI"
                                                          VerticalAlignment="Center"
                                                          Content="{TemplateBinding SelectionBoxItem}"
                                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                          IsHitTestVisible="False" />
                                    </DockPanel>
                                </Border>
                            </ToggleButton.Content>
                        </ToggleButton>

                        <!-- The TextBox must be named PART_EditableTextBox or ComboBox will not recognize it -->
                        <TextBox Visibility="Hidden"
                                 Template="{DynamicResource MinimalisticComboBoxTextBox}"
                                 Margin="3"
                                 HorizontalAlignment="Left"
                                 x:Name="PART_EditableTextBox"
                                 Style="{x:Null}"
                                 VerticalAlignment="Center"
                                 Focusable="True"
                                 Background="Transparent"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                 Panel.ZIndex="1" />

                        <!-- The Popup shows the list of items in the ComboBox. IsOpen is databound to IsDropDownOpen which is toggled via the ComboBoxToggleButton -->
                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}"
                               Placement="Bottom"
                               x:Name="Popup"
                               Focusable="False"
                               AllowsTransparency="True"
                               PopupAnimation="Slide">
                            <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  x:Name="DropDown"
                                  SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{DynamicResource BorderBrush}"
                                        BorderThickness="1" />
                                <ScrollViewer Margin="4 6 4 4"
                                              Style="{DynamicResource SimpleScrollViewer}"
                                              SnapsToDevicePixels="True"
                                              HorizontalScrollBarVisibility="Auto"
                                              VerticalScrollBarVisibility="Auto"
                                              CanContentScroll="True">

                                    <!--The StackPanel is used to display the children by setting IsItemsHost to be True-->
                                    <StackPanel IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Contained" />

                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
<!--                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentPresenterBorder" Property="BorderBrush"
                                    Value="{DynamicResource AccentColorBrush}" />
                            <Setter TargetName="ContentPresenterBorder" Property="BorderThickness" Value=" 1 1 0 1" />
                        </Trigger>-->
                        <!-- This forces the DropDown to have a minimum size if it is empty -->
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="MinHeight" Value="95" TargetName="DropDownBorder" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="AllowsTransparency" SourceName="Popup" Value="true">
                            <Setter Property="Margin" Value="0,2,0,0" TargetName="DropDownBorder" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox" />
                            <!--                            <Setter Property="Visibility" Value="Hidden" TargetName="ContentSite" />-->
                        </Trigger>
<!--                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="OpenArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>