<Expander x:Class="Aura.Views.SettingsExpander"
          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
          xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
          xmlns:primitive="clr-namespace:Aura.Controls.Primitive"
          xmlns:localization="clr-namespace:Aura.Themes.Localization"
          xmlns:views="clr-namespace:Aura.Views"
          xmlns:viewModels="clr-namespace:Aura.ViewModels"
          xmlns:memento="clr-namespace:Settings.Memento;assembly=Settings"
          xmlns:util="clr-namespace:Aura.Controls.Util"
          mc:Ignorable="d"
          d:DataContext="{d:DesignInstance memento:ISettingsMemento, IsDesignTimeCreatable=True}">
    <Expander.Style>
        <Style TargetType="{x:Type views:SettingsExpander}">
            <Style.Resources>
                <ImageBrush x:Key="TrashNormal" ImageSource="{DynamicResource ImgTrash}" />
                <ImageBrush x:Key="TrashAccent" ImageSource="{DynamicResource ImgTrashAccent}" />
                <ImageBrush x:Key="DuplicateNormal" ImageSource="{DynamicResource ImgDuplicate}" />
                <ImageBrush x:Key="DuplicateAccent" ImageSource="{DynamicResource ImgDuplicateAccent}" />
                <ImageBrush x:Key="ExportNormal" ImageSource="{DynamicResource ImgExport}" />
                <ImageBrush x:Key="ExportAccent" ImageSource="{DynamicResource ImgExportAccent}" />
                <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                <util:BooleanToVisibilityInvertConverter x:Key="BooleanToVisibilityInvertConverter" />
            </Style.Resources>
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" Style="{DynamicResource LabelTextBlockSettings}" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="HeaderStringFormat" Value="S" />
            <Setter Property="BorderThickness" Value="1 0 1 1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type views:SettingsExpander}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" x:Name="ContentRow" />
                            </Grid.RowDefinitions>
                            <ToggleButton Width="{TemplateBinding ActualWidth}"
                                          IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          HorizontalAlignment="Left"
                                          OverridesDefaultStyle="True">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <ContentPresenter />
                                    </ControlTemplate>
                                </ToggleButton.Template>
                                <ToggleButton.Content>
                                    <Border x:Name="Border" Style="{DynamicResource RowStyleSettings}"
                                            Background="{TemplateBinding Background}"
                                            BorderThickness="{TemplateBinding BorderThickness}">
                                        <DockPanel LastChildFill="True">
                                            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                                                <StackPanel x:Name="Additional"
                                                            Orientation="Horizontal"
                                                            Margin="3 0 0 0">
                                                    <primitive:ButtonWithVisual x:Name="ButtonRemove"
                                                                                VisualWidth="16"
                                                                                VisualHeight="16"
                                                                                Opacity="0"
                                                                                HorizontalAlignment="Left"
                                                                                NormalBrush="{StaticResource TrashNormal}"
                                                                                MouseOverBrush="{StaticResource TrashAccent}"
                                                                                ToolTip="{x:Static localization:Common_en_EN.TipDelete}"
                                                                                ToolTipService.InitialShowDelay="1000"
                                                                                Visibility="{Binding IsAnisoprintApproved, Converter={StaticResource BooleanToVisibilityInvertConverter}}"
                                                                                Margin="2 0 2 0" />
                                                    <primitive:ButtonWithVisual x:Name="ButtonDuplicate"
                                                                                VisualWidth="16"
                                                                                VisualHeight="16"
                                                                                Opacity="0"
                                                                                HorizontalAlignment="Left"
                                                                                NormalBrush="{StaticResource DuplicateNormal}"
                                                                                MouseOverBrush="{StaticResource DuplicateAccent}"
                                                                                ToolTip="{x:Static localization:Common_en_EN.TipDuplicate}"
                                                                                ToolTipService.InitialShowDelay="1000"
                                                                                Margin="2 0 2 0" />
                                                    <primitive:ButtonWithVisual x:Name="ButtonExport"
                                                                                VisualWidth="14"
                                                                                VisualHeight="14"
                                                                                Opacity="0"
                                                                                HorizontalAlignment="Left"
                                                                                NormalBrush="{StaticResource ExportNormal}"
                                                                                MouseOverBrush="{StaticResource ExportAccent}"
                                                                                ToolTip="{x:Static localization:Common_en_EN.TipExport}"
                                                                                ToolTipService.InitialShowDelay="1000"
                                                                                Margin="2 0 2 0" />
                                                </StackPanel>
                                                <Border x:Name="OpenArrow"
                                                        HorizontalAlignment="Right"
                                                        Width="9" Height="13"
                                                        Background="{DynamicResource SimpleArrow}"
                                                        Margin="5 0 5 0"
                                                        RenderTransformOrigin="0.5,0.5">
                                                    <Border.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform />
                                                            <SkewTransform />
                                                            <RotateTransform />
                                                            <TranslateTransform />
                                                        </TransformGroup>
                                                    </Border.RenderTransform>
                                                </Border>
                                            </StackPanel>
                                            <StackPanel DockPanel.Dock="Left" Orientation="Horizontal">
                                                <ContentPresenter RecognizesAccessKey="True" ContentSource="Header" />
                                                <Border Width="Auto" Height="16" Margin="7 0 7 0"
                                                        Visibility="{Binding IsAnisoprintApproved, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                    <TextBlock Foreground="DimGray" FontSize="8"
                                                               Text="{TemplateBinding AdditionalText}" />
                                                </Border>
                                            </StackPanel>
                                            <Border Background="Transparent" />
                                        </DockPanel>
                                    </Border>
                                </ToggleButton.Content>
                            </ToggleButton>
                            <Border x:Name="ExpandSite" Grid.Row="1"
                                    Visibility="Collapsed"
                                    BorderBrush="LightGray"
                                    Background="{TemplateBinding Background}"
                                    Height="{TemplateBinding Height}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Focusable="false" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter Property="Visibility" Value="Visible" TargetName="ExpandSite" />
                                <Setter TargetName="ExpandSite" Property="BorderThickness" Value="1 0 1 1" />
                                <Setter TargetName="OpenArrow" Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <EventTrigger SourceName="Border" RoutedEvent="MouseEnter">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="ButtonRemove"
                                                             Storyboard.TargetProperty="Opacity" To="1" />
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="ButtonDuplicate"
                                                             Storyboard.TargetProperty="Opacity" To="1" />
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="ButtonExport"
                                                             Storyboard.TargetProperty="Opacity" To="1" />
                                            <!--                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonRemove" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonDuplicate" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>-->
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                            <EventTrigger SourceName="Border" RoutedEvent="MouseLeave">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="ButtonRemove"
                                                             Storyboard.TargetProperty="Opacity" To="0" />
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="ButtonDuplicate"
                                                             Storyboard.TargetProperty="Opacity" To="0" />
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="ButtonExport"
                                                             Storyboard.TargetProperty="Opacity" To="0" />
                                            <!--                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonRemove" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonDuplicate" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>-->
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Expander.Style>
</Expander>